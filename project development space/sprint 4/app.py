# -*- coding: utf-8 -*-
"""App.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D7ryKFXpDT-oT9zRWtVEy_nbSLixhP6r
"""

import numpy as np
from flask import Flask, request, jsonify, render_template
import joblib
import requests

API_KEY = "vRfmC7scgZJ823AuNGkzKb8xo6vG1VW1-QXDcKLaTRX0"

token_response = requests.post('https://iam.cloud.ibm.com/identity/token', data={"apikey": API_KEY, "grant_type": 'urn:ibm:params:oauth:grant-type:apikey'})

mltoken = token_response.json()["access_token"]

header = {'Content-Type': 'application/json', 'Authorization': 'Bearer' + mltoken}

app = Flask(__name__)
model = joblib.load("power_prediction.sav")

@app.route('/')
def home():
    return render_template("intro.html")

@app.route('/predict')
def predict():
    return render_template("predict.html")

@app.route('/windapi', methods=['POST'])
def windapi():
    city = request.form.get('city')
    apikey = "21fa8dd805075da43797f6dc3210093a"
    url = "http://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=" + apikey
    resp = requests.get(url)
    resp = resp.json()
    temp = str(resp["main"]["temp"]) +" Â°C"
    humid = str(resp["main"]["humidity"]) + " %"
    pressure = str(resp["main"]["pressure"]) + " mmHG"
    speed = str(resp["wind"]["speed"]) + " m/s"
    return render_template('predict.html', temp=temp, humid = humid, pressure=pressure, speed = speed)

@app.route('/y_predict',methods = ['POST'])
def y_predict():
    payload_scoring = {"input_data": [{"field": [["Wind Speed","Theoretical power "]], "values": [[90, 89]]}]}

    response_scoring = requests.post('https://us-south.ml.cloud.ibm.com/ml/v4/deployments/b3036f4f-b8d7-430c-8584-71e65199dc08/predictions?version=2022-11-20', json=payload_scoring,
    headers={'Authorization': 'Bearer ' + mltoken})
    print("Scoring response")
    print(response_scoring.json())
    probability = response_scoring.json()['predictions'][0]['values'][0][0]
    print(probability)
    x_test = [[float(x) for x in request.form.values()]]
    prediction = model.predict(x_test)
    print(prediction)
    output = prediction[0]
    return render_template('predict.html',prediction_text = 'The energy predicted is {:.2f} KWh'.format(output))

if __name__ == "__main__":
    app.run(debug=False)